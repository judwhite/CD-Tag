//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDTag.Common.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CDTag.Common.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{
        ///		color: &quot;red&quot;,
        ///		value: &quot;#f00&quot;
        ///	},
        ///	{
        ///		color: &quot;green&quot;,
        ///		value: &quot;#0f0&quot;
        ///	},
        ///	{
        ///		color: &quot;blue&quot;,
        ///		value: &quot;#00f&quot;
        ///	},
        ///	{
        ///		color: &quot;cyan&quot;,
        ///		value: &quot;#0ff&quot;
        ///	},
        ///	{
        ///		color: &quot;magenta&quot;,
        ///		value: &quot;#f0f&quot;
        ///	},
        ///	{
        ///		color: &quot;yellow&quot;,
        ///		value: &quot;#ff0&quot;
        ///	},
        ///	{
        ///		color: &quot;black&quot;,
        ///		value: &quot;#000&quot;
        ///	}
        ///].
        /// </summary>
        internal static string class_array_json {
            get {
                return ResourceManager.GetString("class_array_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	color: &quot;red&quot;,
        ///	value: &quot;#f00&quot;
        ///}.
        /// </summary>
        internal static string colorvalue_json {
            get {
                return ResourceManager.GetString("colorvalue_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;items&quot;:
        ///		{
        ///			&quot;item&quot;:
        ///				[
        ///					{
        ///						&quot;id&quot;: &quot;0001&quot;,
        ///						&quot;type&quot;: &quot;donut&quot;,
        ///						&quot;name&quot;: &quot;Cake&quot;,
        ///						&quot;ppu&quot;: 0.55,
        ///						&quot;batters&quot;:
        ///							{
        ///								&quot;batter&quot;:
        ///									[
        ///										{ &quot;id&quot;: &quot;1001&quot;, &quot;type&quot;: &quot;Regular&quot; },
        ///										{ &quot;id&quot;: &quot;1002&quot;, &quot;type&quot;: &quot;Chocolate&quot; },
        ///										{ &quot;id&quot;: &quot;1003&quot;, &quot;type&quot;: &quot;Blueberry&quot; },
        ///										{ &quot;id&quot;: &quot;1004&quot;, &quot;type&quot;: &quot;Devil&apos;s Food&quot; }
        ///									]
        ///							},
        ///						&quot;topping&quot;:
        ///							[
        ///								{ &quot;id&quot;: &quot;5001&quot;, &quot;type&quot;: &quot;None&quot; },
        ///								{ &quot;id&quot;: &quot;5002&quot;, &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string donuts_json {
            get {
                return ResourceManager.GetString("donuts_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;id&quot;: &quot;0001&quot;,
        ///	&quot;type&quot;: &quot;donut&quot;,
        ///	&quot;name&quot;: &quot;Cake&quot;,
        ///	&quot;image&quot;:
        ///		{
        ///			&quot;url&quot;: &quot;images/0001.jpg&quot;,
        ///			&quot;width&quot;: 200,
        ///			&quot;height&quot;: 200
        ///		},
        ///	&quot;thumbnail&quot;:
        ///		{
        ///			&quot;url&quot;: &quot;images/thumbnails/0001.jpg&quot;,
        ///			&quot;width&quot;: 32,
        ///			&quot;height&quot;: 32
        ///		}
        ///}.
        /// </summary>
        internal static string image_thumbnail_json {
            get {
                return ResourceManager.GetString("image_thumbnail_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [ 100, 500, 300, 200, 400 ].
        /// </summary>
        internal static string int_array_json {
            get {
                return ResourceManager.GetString("int_array_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///     &quot;firstName&quot;: &quot;John&quot;,
        ///     &quot;lastName&quot;: &quot;Smith&quot;,
        ///     &quot;age&quot;: 25,
        ///     &quot;address&quot;:
        ///     {
        ///         &quot;streetAddress&quot;: &quot;21 2nd Street&quot;,
        ///         &quot;city&quot;: &quot;New York&quot;,
        ///         &quot;state&quot;: &quot;NY&quot;,
        ///         &quot;postalCode&quot;: &quot;10021&quot;
        ///     },
        ///     &quot;phoneNumber&quot;:
        ///     [
        ///         {
        ///           &quot;type&quot;: &quot;home&quot;,
        ///           &quot;number&quot;: &quot;212 555-1234&quot;
        ///         },
        ///         {
        ///           &quot;type&quot;: &quot;fax&quot;,
        ///           &quot;number&quot;: &quot;646 555-4567&quot;
        ///         }
        ///     ]
        /// }.
        /// </summary>
        internal static string person_json {
            get {
                return ResourceManager.GetString("person_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{
        ///		&quot;id&quot;: &quot;0001&quot;,
        ///		&quot;type&quot;: &quot;donut&quot;,
        ///		&quot;name&quot;: &quot;Cake&quot;,
        ///		&quot;ppu&quot;: 0.55,
        ///		&quot;batters&quot;:
        ///			{
        ///				&quot;batter&quot;:
        ///					[
        ///						{ &quot;id&quot;: &quot;1001&quot;, &quot;type&quot;: &quot;Regular&quot; },
        ///						{ &quot;id&quot;: &quot;1002&quot;, &quot;type&quot;: &quot;Chocolate&quot; },
        ///						{ &quot;id&quot;: &quot;1003&quot;, &quot;type&quot;: &quot;Blueberry&quot; },
        ///						{ &quot;id&quot;: &quot;1004&quot;, &quot;type&quot;: &quot;Devil&apos;s Food&quot; }
        ///					]
        ///			},
        ///		&quot;topping&quot;:
        ///			[
        ///				{ &quot;id&quot;: &quot;5001&quot;, &quot;type&quot;: &quot;None&quot; },
        ///				{ &quot;id&quot;: &quot;5002&quot;, &quot;type&quot;: &quot;Glazed&quot; },
        ///				{ &quot;id&quot;: &quot;5005&quot;, &quot;type&quot;: &quot;Sugar&quot; },
        ///				{ &quot;id&quot;: &quot;5007&quot;, &quot;type&quot;: &quot;Powdered Sugar&quot; },
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string recipe_array_json {
            get {
                return ResourceManager.GetString("recipe_array_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;id&quot;: &quot;0001&quot;,
        ///	&quot;type&quot;: &quot;donut&quot;,
        ///	&quot;name&quot;: &quot;Cake&quot;,
        ///	&quot;ppu&quot;: 0.55,
        ///	&quot;batters&quot;:
        ///		{
        ///			&quot;batter&quot;:
        ///				[
        ///					{ &quot;id&quot;: &quot;1001&quot;, &quot;type&quot;: &quot;Regular&quot; },
        ///					{ &quot;id&quot;: &quot;1002&quot;, &quot;type&quot;: &quot;Chocolate&quot; },
        ///					{ &quot;id&quot;: &quot;1003&quot;, &quot;type&quot;: &quot;Blueberry&quot; },
        ///					{ &quot;id&quot;: &quot;1004&quot;, &quot;type&quot;: &quot;Devil&apos;s Food&quot; }
        ///				]
        ///		},
        ///	&quot;topping&quot;:
        ///		[
        ///			{ &quot;id&quot;: &quot;5001&quot;, &quot;type&quot;: &quot;None&quot; },
        ///			{ &quot;id&quot;: &quot;5002&quot;, &quot;type&quot;: &quot;Glazed&quot; },
        ///			{ &quot;id&quot;: &quot;5005&quot;, &quot;type&quot;: &quot;Sugar&quot; },
        ///			{ &quot;id&quot;: &quot;5007&quot;, &quot;type&quot;: &quot;Powdered Sugar&quot; },
        ///			{ &quot;id&quot;: &quot;5006&quot;, &quot;type&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string recipe_json {
            get {
                return ResourceManager.GetString("recipe_json", resourceCulture);
            }
        }
    }
}
